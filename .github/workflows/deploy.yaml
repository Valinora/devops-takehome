name: Deploy

on:
  push:
    tags:
      - v**
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGION: us-west1
  PROJECT_ID: liatriotakehome
  IMAGE_NAME: ${{github.repository}}
  TEST_TAG: test/test:test
  APP: apiserver


jobs:
  build-test-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build
        uses: docker/build-push-action@v6
        with:
          load: true
          tags: ${{ env.TEST_TAG }}

    # Run Tests
      - name: Run Image
        run:
          docker run -d  -p 80:80 --rm ${{ env.TEST_TAG }}

      - name: Run Tests
        uses: liatrio/github-actions/apprentice-action@0b41561cca6822cc8d880fe0e49e7807a41fdf91

    # Push Artifact
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.WIF_PROVIDER }}
          service_account: ${{ vars.WIF_SERVICE_ACCOUNT }}
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}


      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
             ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/takehome/apiserver:${{ github.sha }}
             ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/takehome/apiserver:latest

      - name: Deploy to GKE
        uses: google-github-actions/deploy-gke-container@v0.0.3
        with:
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/takehome/apiserver:latest
          app_name: apiserver-deployment
          project_id: ${{ env.PROJECT_ID }}
          cluster_name: autopilot-takehome-1
          regions: us-west1
